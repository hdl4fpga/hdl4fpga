#                                                                            #
# Author(s):                                                                 #
#   Miguel Angel Sagreras                                                    #
#                                                                            #
# Copyright (C) 2015                                                         #
#    Miguel Angel Sagreras                                                   #
#                                                                            #
# This source file may be used and distributed without restriction provided  #
# that this copyright statement is not removed from the file and that any    #
# derivative work contains  the original copyright notice and the associated #
# disclaimer.                                                                #
#                                                                            #
# This source file is free software; you can redistribute it and/or modify   #
# it under the terms of the GNU General Public License as published by the   #
# Free Software Foundation, either version 3 of the License, or (at your     #
# option) any later version.                                                 #
#                                                                            #
# This source is distributed in the hope that it will be useful, but WITHOUT #
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or      #
# FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for   #
# more details at http://www.gnu.org/licenses/.                              #
#                                                                            #

NET "clk" TNM_NET = clk;
TIMESPEC TS_xtal = PERIOD "clk" 50 ns HIGH 50%;
NET "clk" CLOCK_DEDICATED_ROUTE = true;

NET "mii_rxc" TNM_NET = mii_rxc;
TIMESPEC TS_mii_rxc = PERIOD "mii_rxc" 40 ns HIGH 50%;
NET "mii_rxc" CLOCK_DEDICATED_ROUTE = FALSE;

TIMESPEC TS_adc_clkout = PERIOD "adc_clkout" 7.8125 ns HIGH 50%;
NET "adc_clkout" TNM_NET = adc_clkout;
OFFSET = IN -0.600 ns VALID 7.8125 ns BEFORE adc_clkout RISING;
OFFSET = IN -0.600 ns VALID 7.8125 ns BEFORE adc_clkout RISING;

NET "video_clk" TNM_NET = FFS  FFS_videoclk;
NET "video_clk" TNM_NET = RAMS RAMS_videoclk;
NET "adc_clk" TNM_NET = FFS  FFS_adcclk;
NET "adc_clk" TNM_NET = RAMS RAMS_adcclk;

TIMESPEC TS_video2adc1 = FROM FFS_videoclk TO FFS_adcclk  TIG;
TIMESPEC TS_video2adc2 = FROM FFS_videoclk TO RAMS_adcclk TIG;
TIMESPEC TS_adc2video1 = FROM FFS_adcclk TO FFS_videoclk TIG;
TIMESPEC TS_adc2video2 = FROM RAMS_adcclk TO FFS_videoclk TIG;


NET "ddr_dqs[0]" TNM_NET = dqs0;
NET "ddr_dqs[0]" CLOCK_DEDICATED_ROUTE = false;

NET "ddr_dqs[1]" TNM_NET = dqs1;
NET "ddr_dqs[1]" CLOCK_DEDICATED_ROUTE = false;

# ###################### #
# DDR 200 Mhz rate clock #
# ###################### #

# TIMESPEC TS_dso0 = PERIOD "dqs0" 5 ns    HIGH 50% PHASE 0.0 INPUT_JITTER 0.500 ns;
# TIMESPEC TS_dso1 = PERIOD "dqs1" TS_dso0 HIGH 50% PHASE 0.0 INPUT_JITTER 0.500 ns;

# NET "ddr_st_lp_dqs" OFFSET = IN 1.250 ns VALID 5 ns BEFORE ddr_dqs[0] RISING;
# NET "ddr_st_lp_dqs" OFFSET = IN 1.250 ns VALID 5 ns BEFORE ddr_dqs[1] RISING;

# OFFSET = IN 0 ns VALID 2.500 ns BEFORE ddr_dqs[0] RISING;
# OFFSET = IN 0 ns VALID 2.500 ns BEFORE ddr_dqs[1] RISING;

# ###################### #
# DDR 166 Mhz rate clock #
# ###################### #

TIMESPEC TS_dso0 = PERIOD "dqs0" 6.0 ns  HIGH 50% PHASE 0.0; # INPUT_JITTER 0.000 ns;
TIMESPEC TS_dso1 = PERIOD "dqs1" TS_dso0 HIGH 50% PHASE 0.0; # INPUT_JITTER 0.000 ns;

NET "ddr_st_lp_dqs" OFFSET = IN 1.500 ns VALID 6 ns BEFORE ddr_dqs[0] RISING;
NET "ddr_st_lp_dqs" OFFSET = IN 1.500 ns VALID 6 ns BEFORE ddr_dqs[1] RISING;

OFFSET = IN 0 ns VALID 3 ns BEFORE ddr_dqs[0] RISING;
OFFSET = IN 0 ns VALID 3 ns BEFORE ddr_dqs[1] RISING;

# ###################### #
# Ignore crossclock time #
# ###################### #

NET sys_clk   TNM_NET = FFS  FFS_sysclk;
NET sys_clk   TNM_NET = RAMS RAMS_sysclk;
NET video_clk TNM_NET = FFS  FFS_videoclk;
NET video_clk TNM_NET = RAMS RAMS_videoclk;
NET ddr_clk0      TNM_NET = FFS  FFS_clk0;
NET ddr_clk0      TNM_NET = RAMS RAMS_clk0;
NET ddr_clk90     TNM_NET = FFS  FFS_clk90;
NET ddr_clk90     TNM_NET = RAMS RAMS_clk90;

TIMESPEC TS_ddr2clk    = FROM FFS_clk0     TO FFS_sysclk   TIG;
TIMESPEC TS_sys2ddr    = FROM FFS_sysclk   TO FFS_clk0     TIG;
TIMESPEC TS_sys2ddr1   = FROM RAMS_sysclk  TO FFS_clk0     TIG;
TIMESPEC TS_sys2video  = FROM FFS_sysclk   TO FFS_videoclk TIG;
TIMESPEC TS_video2ddr  = FROM FFS_videoclk TO FFS_clk0     TIG;
TIMESPEC TS_video2sys  = FROM FFS_videoclk TO FFS_sysclk   TIG;
TIMESPEC TS_video2sys1 = FROM FFS_videoclk TO RAMS_sysclk  TIG;
TIMESPEC TS_ddr2sys    = FROM FFS_clk0     TO RAMS_sysclk  TIG;
TIMESPEC TS_ddr2video  = FROM FFS_clk0     TO FFS_videoclk TIG;
TIMESPEC TS_ddr2video1 = FROM RAMS_clk0    TO FFS_videoclk TIG;
TIMESPEC TS_ram2oddr   = FROM RAMS_clk0    TO FFS_clk90    TIG;
TIMESPEC TS_ff2ram     = FROM FFS_clk0     TO RAMS_clk90   TIG;
TIMESPEC TS_ram2ff     = FROM RAMS_clk90   TO FFS_clk0     TIG;

## ######################## #
## Read-FIFO DQS Delay Taps #
## ######################## #
#
## Data Byte 0 #
## ########### #
#
#INST "sdrphy_e/byte_g[0].sdrdqphy_i/dqsi_b.dqsidelay_i/xc3s_g.idelay_i/delayed_e/lutn" LOC = SLICE_X2Y60;
#INST "sdrphy_e/byte_g[0].sdrdqphy_i/dqsi_b.dqsidelay_i/xc3s_g.idelay_i/delayed_e/lutn" BEL = G;
#INST "sdrphy_e/byte_g[0].sdrdqphy_i/dqsi_b.dqsidelay_i/xc3s_g.idelay_i/delayed_e/lutp" LOC = SLICE_X2Y60;
#INST "sdrphy_e/byte_g[0].sdrdqphy_i/dqsi_b.dqsidelay_i/xc3s_g.idelay_i/delayed_e/lutp" BEL = F;
#
## Data Byte 1 #
## ########### #
#
#INST "sdrphy_e/byte_g[1].sdrdqphy_i/dqsi_b.dqsidelay_i/xc3s_g.idelay_i/delayed_e/lutn" LOC = SLICE_X2Y82;
#INST "sdrphy_e/byte_g[1].sdrdqphy_i/dqsi_b.dqsidelay_i/xc3s_g.idelay_i/delayed_e/lutn" BEL = G;
#INST "sdrphy_e/byte_g[1].sdrdqphy_i/dqsi_b.dqsidelay_i/xc3s_g.idelay_i/delayed_e/lutp" LOC = SLICE_X2Y82;
#INST "sdrphy_e/byte_g[1].sdrdqphy_i/dqsi_b.dqsidelay_i/xc3s_g.idelay_i/delayed_e/lutp" BEL = F;
#
## NET "ddr_lp_ck" TNM_NET = ddr_lp_ck;
## TIMESPEC TS_ddr_lp_ck = PERIOD "ddr_lp_ck" 6 ns HIGH 50%;
## NET "ddr_lp_ck" CLOCK_DEDICATED_ROUTE = FALSE;
#
## NET "ddr_st_lp_dqs" OFFSET = IN 0.900 ns VALID 4.800 ns BEFORE ddr_lp_ck FALLING;
# OFFSET = IN -0.450 ns VALID 1.900 ns BEFORE ddr_lp_ck FALLING;