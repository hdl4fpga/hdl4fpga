#                                                                            #
# Author(s):                                                                 #
#   Miguel Angel Sagreras                                                    #
#                                                                            #
# Copyright (C) 2015                                                         #
#    Miguel Angel Sagreras                                                   #
#                                                                            #
# This source file may be used and distributed without restriction provided  #
# that this copyright statement is not removed from the file and that any    #
# derivative work contains  the original copyright notice and the associated #
# disclaimer.                                                                #
#                                                                            #
# This source file is free software; you can redistribute it and/or modify   #
# it under the terms of the GNU General Public License as published by the   #
# Free Software Foundation, either version 3 of the License, or (at your     #
# option) any later version.                                                 #
#                                                                            #
# This source is distributed in the hope that it will be useful, but WITHOUT #
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or      #
# FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for   #
# more details at http://www.gnu.org/licenses/.                              #
#                                                                            #

NET "clk_50mhz" TNM_NET = clk_50mhz;
TIMESPEC TS_clk_50mhz = PERIOD "clk_50mhz" 20 ns HIGH 50%;
NET "clk_50mhz" CLOCK_DEDICATED_ROUTE = true;

NET "e_rx_clk" TNM_NET = e_rx_clk;
TIMESPEC TS_e_rx_clk = PERIOD "e_rx_clk" 40 ns HIGH 50%;
NET "e_rx_clk" CLOCK_DEDICATED_ROUTE = FALSE;

NET "e_tx_clk" TNM_NET = e_tx_clk;
TIMESPEC TS_e_tx_clk = PERIOD "e_tx_clk" 40 ns HIGH 50%;
NET "e_tx_clk" CLOCK_DEDICATED_ROUTE = FALSE;

TIMEGRP "sys_grp"  = net "sys_clk";
TIMEGRP "video_grp"  = net "video_clk";
TIMEGRP "spi_grp1" = net "spi_b_spidcm_e_dcm_clkin";
TIMEGRP "spi_grp2" = net "spi_b_spidcm_e_dcm_clkfx";
TIMESPEC "TSspi_async1"=FROM "video_grp"  TO "spi_grp2" TIG;
TIMESPEC "TSspi_async2"=FROM "spi_grp2" TO "video_grp" TIG;
TIMESPEC "TSspi_async3"=FROM "spi_grp1" TO "sys_grp" TIG;

NET "sd_dqs[0]" TNM_NET = dqs0;
NET "sd_dqs[0]" CLOCK_DEDICATED_ROUTE = false;

NET "sd_dqs[1]" TNM_NET = dqs1;
NET "sd_dqs[1]" CLOCK_DEDICATED_ROUTE = false;

# ###################### #
# DDR 200 Mhz rate clock #
# ###################### #

#TIMESPEC TS_dso0 = PERIOD "dqs0" 5 ns HIGH 50%;
#TIMESPEC TS_dso1 = PERIOD "dqs1" TS_dso0 HIGH 50% PHASE 0.0;

#NET "sd_dm*" OFFSET = IN 1.250 ns VALID 4.75 ns BEFORE sd_dqs[0] RISING;
#NET "sd_dm*" OFFSET = IN 1.250 ns VALID 4.75 ns BEFORE sd_dqs[1] RISING;

#OFFSET = IN 0 ns VALID 2.500 ns BEFORE sd_dqs[0] RISING;
#OFFSET = IN 0 ns VALID 2.500 ns BEFORE sd_dqs[1] RISING;

# ###################### #
# DDR 166 Mhz rate clock #
# ###################### #

# TIMESPEC TS_dso0 = PERIOD "dqs0" 6.0 ns  HIGH 50% PHASE 0.0 INPUT_JITTER 0.500 ns;
# TIMESPEC TS_dso1 = PERIOD "dqs1" TS_dso0 HIGH 50% PHASE 0.0 INPUT_JITTER 0.500 ns;
# 
# NET "sd_dm*" OFFSET = IN 1.500 ns VALID 6.000 ns BEFORE sd_dqs[0] RISING;
# NET "sd_dm*" OFFSET = IN 1.500 ns VALID 6.000 ns BEFORE sd_dqs[1] RISING;
# 
# OFFSET = IN 0.000 ns VALID 3.000 ns BEFORE sd_dqs[0] RISING;
# OFFSET = IN 0.000 ns VALID 3.000 ns BEFORE sd_dqs[1] RISING;

# ###################### #
# DDR 133 Mhz rate clock #
# ###################### #

TIMESPEC TS_dso0 = PERIOD "dqs0" 7.500 ns HIGH 50% PHASE 0.0 INPUT_JITTER 0.500 ns;
TIMESPEC TS_dso1 = PERIOD "dqs1" TS_dso0  HIGH 50% PHASE 0.0 INPUT_JITTER 0.500 ns;

NET "sd_dm*" OFFSET = IN 1.875 ns VALID 6.000 ns BEFORE sd_dqs[0] RISING;
NET "sd_dm*" OFFSET = IN 1.875 ns VALID 6.000 ns BEFORE sd_dqs[1] RISING;

OFFSET = IN 0.000 ns VALID 3.750 ns BEFORE sd_dqs[0] RISING;
OFFSET = IN 0.000 ns VALID 3.750 ns BEFORE sd_dqs[1] RISING;

# ###################### #
# Ignore crossclock time #
# ###################### #

NET sys_clk   TNM_NET = FFS  FFS_sysclk;
NET sys_clk   TNM_NET = RAMS RAMS_sysclk;
NET video_clk TNM_NET = FFS  FFS_videoclk;
NET video_clk TNM_NET = RAMS RAMS_videoclk;
NET clk0      TNM_NET = FFS  FFS_clk0;
NET clk0      TNM_NET = RAMS RAMS_clk0;
NET clk90     TNM_NET = FFS  FFS_clk90;
NET clk90     TNM_NET = RAMS RAMS_clk90;

TIMESPEC TS_ddr2clk    = FROM FFS_clk0     TO FFS_sysclk   TIG;
TIMESPEC TS_sys2ddr    = FROM FFS_sysclk   TO FFS_clk0     TIG;
TIMESPEC TS_sys2ddr1   = FROM RAMS_sysclk  TO FFS_clk0     TIG;
TIMESPEC TS_sys2video  = FROM FFS_sysclk   TO FFS_videoclk TIG;
TIMESPEC TS_video2ddr  = FROM FFS_videoclk TO FFS_clk0     TIG;
TIMESPEC TS_video2sys  = FROM FFS_videoclk TO FFS_sysclk   TIG;
TIMESPEC TS_video2sys1 = FROM FFS_videoclk TO RAMS_sysclk  TIG;
TIMESPEC TS_ddr2sys    = FROM FFS_clk0     TO RAMS_sysclk  TIG;
TIMESPEC TS_ddr2video  = FROM FFS_clk0     TO FFS_videoclk TIG;
TIMESPEC TS_ddr2video1 = FROM RAMS_clk0    TO FFS_videoclk TIG;
TIMESPEC TS_ram2oddr   = FROM RAMS_clk0    TO FFS_clk90    TIG;
TIMESPEC TS_ff2ram     = FROM FFS_clk0     TO RAMS_clk90   TIG;
TIMESPEC TS_ram2ff     = FROM RAMS_clk90   TO FFS_clk0     TIG;

# ####################### #
# Read-FIFO DQS Delay Tap #
# ####################### #

# Data Byte 0 #
# ########### #

INST "sdrphy_e/byte_g[0].sdrdqphy_i/dqsi_b.dqsidelay_i/xc3s_g.idelay_i/delayed_e/lutn" LOC = SLICE_X2Y29;
INST "sdrphy_e/byte_g[0].sdrdqphy_i/dqsi_b.dqsidelay_i/xc3s_g.idelay_i/delayed_e/lutp" LOC = SLICE_X2Y29;

# Data Byte 1 #
# ########### #

INST "sdrphy_e/byte_g[1].sdrdqphy_i/dqsi_b.dqsidelay_i/xc3s_g.idelay_i/delayed_e/lutn" LOC = SLICE_X2Y72;
INST "sdrphy_e/byte_g[1].sdrdqphy_i/dqsi_b.dqsidelay_i/xc3s_g.idelay_i/delayed_e/lutp" LOC = SLICE_X2Y72;